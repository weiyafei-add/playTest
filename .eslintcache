[{"G:\\tsapp\\src\\App.tsx":"1","G:\\tsapp\\src\\index.tsx":"2","G:\\tsapp\\src\\pages\\hello\\index.tsx":"3","G:\\tsapp\\src\\button\\index.tsx":"4","G:\\tsapp\\src\\ButtonCustom\\button.tsx":"5","G:\\tsapp\\src\\REF\\Child.jsx":"6","G:\\tsapp\\src\\REF\\index.jsx":"7","G:\\tsapp\\src\\hooks\\index.jsx":"8","G:\\tsapp\\src\\tt\\page1\\index.jsx":"9","G:\\tsapp\\src\\tt\\page2\\index.jsx":"10","G:\\tsapp\\src\\animation\\index.jsx":"11","G:\\tsapp\\src\\routers\\index.tsx":"12","G:\\tsapp\\src\\pages\\home\\index.jsx":"13","G:\\tsapp\\src\\components\\customModal\\index.tsx":"14","G:\\tsapp\\src\\pages\\listView\\index.tsx":"15","G:\\tsapp\\src\\components\\custom-list-view\\index.tsx":"16"},{"size":628,"mtime":1622183814278,"results":"17","hashOfConfig":"18"},{"size":231,"mtime":1622182709014,"results":"19","hashOfConfig":"18"},{"size":2108,"mtime":1607756134807,"results":"20","hashOfConfig":"18"},{"size":1821,"mtime":1607849254421,"results":"21","hashOfConfig":"18"},{"size":2241,"mtime":1607864709969,"results":"22","hashOfConfig":"18"},{"size":596,"mtime":1609241424016,"results":"23","hashOfConfig":"18"},{"size":725,"mtime":1609241424016,"results":"24","hashOfConfig":"18"},{"size":120,"mtime":1609742129065,"results":"25","hashOfConfig":"18"},{"size":391,"mtime":1622173007309,"results":"26","hashOfConfig":"18"},{"size":696,"mtime":1622173007309,"results":"27","hashOfConfig":"18"},{"size":160,"mtime":1622173007308,"results":"28","hashOfConfig":"18"},{"size":603,"mtime":1622427561789,"results":"29","hashOfConfig":"18"},{"size":744,"mtime":1622527565293,"results":"30","hashOfConfig":"18"},{"size":744,"mtime":1622431278408,"results":"31","hashOfConfig":"18"},{"size":1779,"mtime":1622527994301,"results":"32","hashOfConfig":"18"},{"size":1861,"mtime":1622527954149,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1qkx36m",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\tsapp\\src\\App.tsx",[],["70","71"],"G:\\tsapp\\src\\index.tsx",[],["72","73"],"G:\\tsapp\\src\\pages\\hello\\index.tsx",["74","75","76","77","78","79","80","81","82"],"G:\\tsapp\\src\\button\\index.tsx",["83","84","85"],"G:\\tsapp\\src\\ButtonCustom\\button.tsx",["86"],"import React, { CSSProperties, ReactElement, ReactEventHandler } from 'react';\r\nimport './index.less';\r\nimport Icon, { LoadingOutlined } from '@ant-design/icons'\r\ninterface TCustomButtonProps {\r\n    className?: string,\r\n    style?: CSSProperties,\r\n    onClick?: Function,\r\n    dotted?: string,\r\n    type?: 'primary' | 'warning' | 'danger' | 'default',\r\n    disabled?: Boolean,\r\n    ghost?: Boolean,\r\n    size?: 'large' | 'middle' | 'small'\r\n    loading?: Boolean,\r\n    radius?: Boolean,\r\n    icon?: string | null,\r\n}\r\n\r\nconst prefix = 'ccp-custom';\r\n\r\n\r\nconst MyButton:React.FC<TCustomButtonProps> = (props) :ReactElement => {\r\n    const { \r\n            style = {}, \r\n            className = '', \r\n            type = 'default', \r\n            size = 'middle', \r\n            radius = false,\r\n            disabled,\r\n            loading,\r\n            icon,\r\n            onClick\r\n         } = props;\r\n\r\n    // 计算类名\r\n    const handleCalcClassNameText = ():string => {\r\n        const classNames = [size, type, className];\r\n\r\n        const optionalClassNames =  ['ghost', 'dotted', 'disabled', 'loading'] as const;\r\n\r\n        optionalClassNames.forEach((classNameText) => {\r\n            if(props[classNameText]) {\r\n                classNames.push(classNameText)\r\n            }\r\n        })\r\n        if(radius) {\r\n            classNames.push('radius')\r\n        }\r\n        return classNames.join(' ')\r\n    }\r\n    // 渲染loading\r\n    const renderButtonLoadingContent = ():ReactElement | null => {\r\n        if(!loading) {\r\n            return null\r\n        }\r\n        return <LoadingOutlined/>\r\n    }\r\n    const renderButtonIconContent = ():ReactElement | null => {\r\n        if(!icon) return null\r\n        return <Icon type={icon} />\r\n    }\r\n\r\n    // 处理事件\r\n    const handleCustomButtonClick = () => {\r\n        if(disabled || loading) {\r\n            return;\r\n        }\r\n        onClick && onClick()\r\n    }\r\n\r\n    return (\r\n        <div className={`${prefix}-container ${handleCalcClassNameText()} `} style={style} onClick={() => handleCustomButtonClick()} >\r\n            {renderButtonLoadingContent()}\r\n            {renderButtonIconContent()}\r\n            <span>{props.children}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyButton","G:\\tsapp\\src\\REF\\Child.jsx",["87"],"import React, {forwardRef, useImperativeHandle, useRef} from 'react'\r\n\r\nconst Child = forwardRef((props, ref) => {\r\n    console.log(props)\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handleOnClick() {\r\n            console.log('点击子组件的REF')\r\n        },\r\n        handleOnInput(text) {\r\n            console.log(text)\r\n        }\r\n    }))\r\n    console.log('lesson_1222修改')\r\n    return <div>\r\n        <p>this is childComponent</p>\r\n        <button ref={ref} onClick={() => {\r\n            console.log(456)\r\n        }} >childRenButton</button>\r\n    </div>\r\n})\r\n\r\nexport default Child","G:\\tsapp\\src\\REF\\index.jsx",["88"],"G:\\tsapp\\src\\hooks\\index.jsx",[],"G:\\tsapp\\src\\tt\\page1\\index.jsx",[],"G:\\tsapp\\src\\tt\\page2\\index.jsx",[],"G:\\tsapp\\src\\animation\\index.jsx",[],"G:\\tsapp\\src\\routers\\index.tsx",[],"G:\\tsapp\\src\\pages\\home\\index.jsx",[],"G:\\tsapp\\src\\components\\customModal\\index.tsx",[],"G:\\tsapp\\src\\pages\\listView\\index.tsx",[],"G:\\tsapp\\src\\components\\custom-list-view\\index.tsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":8,"column":5,"nodeType":"97","messageId":"98","endLine":14,"endColumn":6},{"ruleId":"95","severity":1,"message":"96","line":15,"column":5,"nodeType":"97","messageId":"98","endLine":15,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":15,"column":11,"nodeType":"101","messageId":"102","endLine":15,"endColumn":15},{"ruleId":"99","severity":1,"message":"103","line":34,"column":7,"nodeType":"101","messageId":"102","endLine":34,"endColumn":13},{"ruleId":"99","severity":1,"message":"104","line":42,"column":7,"nodeType":"101","messageId":"102","endLine":42,"endColumn":10},{"ruleId":"99","severity":1,"message":"105","line":48,"column":7,"nodeType":"101","messageId":"102","endLine":48,"endColumn":16},{"ruleId":"99","severity":1,"message":"106","line":76,"column":7,"nodeType":"101","messageId":"102","endLine":76,"endColumn":10},{"ruleId":"99","severity":1,"message":"107","line":79,"column":7,"nodeType":"101","messageId":"102","endLine":79,"endColumn":12},{"ruleId":"99","severity":1,"message":"108","line":99,"column":7,"nodeType":"101","messageId":"102","endLine":99,"endColumn":32},{"ruleId":"99","severity":1,"message":"109","line":18,"column":11,"nodeType":"101","messageId":"102","endLine":18,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":27,"column":7,"nodeType":"112","endLine":27,"endColumn":9,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":52,"column":39,"nodeType":"116","endLine":52,"endColumn":84},{"ruleId":"99","severity":1,"message":"117","line":1,"column":46,"nodeType":"101","messageId":"102","endLine":1,"endColumn":63},{"ruleId":"118","severity":1,"message":"119","line":1,"column":49,"nodeType":"101","messageId":"102","endLine":1,"endColumn":55},{"ruleId":"118","severity":1,"message":"120","line":5,"column":19,"nodeType":"101","messageId":"102","endLine":5,"endColumn":27},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","@typescript-eslint/no-unused-vars","'add2' is assigned a value but never used.","Identifier","unusedVar","'animal' is assigned a value but never used.","'Car' is defined but never used.","'CellPhone' is defined but never used.","'str' is assigned a value but never used.","'Queue' is defined but never used.","'ff' is assigned a value but never used.","'context' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'style'. Either include it or remove the dependency array.","ArrayExpression",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactEventHandler' is defined but never used.","no-unused-vars","'useRef' is defined but never used.","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [style]",{"range":"126","text":"127"},[919,921],"[style]"]